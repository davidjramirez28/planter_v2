{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useFetch = (method, url, body) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [apiData, setApiData] = useState([]);\n  const [apiError, setApiError] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n  setIsLoading(true);\n  const fetchData = async () => {\n    const response = await axios.request({\n      method: method,\n      url: url,\n      data: body\n    }).then(apiData => setApiData(response === null || response === void 0 ? void 0 : response.data).catch(apiError => setApiError(apiError))).finally(() => setIsLoading(false));\n    const data = await (response === null || response === void 0 ? void 0 : response.data);\n    setApiData(data);\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    apiData,\n    apiError\n  };\n};\n_s(useFetch, \"DVvMG5lepcb1vWNUCfKgl8mRiuk=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","axios","useFetch","method","url","body","isLoading","setIsLoading","apiData","setApiData","apiError","setApiError","fetchData","response","request","data","then","catch","finally"],"sources":["/home/pi/Planter_v2/planter_v2/src/utilities/hooks/useFetch.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (method, url, body) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [apiData, setApiData] = useState([]);\n    const [apiError, setApiError] = useState(\"\");\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n        setIsLoading(true);\n        const fetchData = async () => {\n                const response = await axios.request({\n                    method: method,\n                    url: url,\n                    data: body\n                })\n                .then(apiData => setApiData(response?.data)\n                .catch(apiError => setApiError(apiError)))\n                .finally(() => setIsLoading(false));\n                const data = await response?.data;\n                setApiData(data);\n            setIsLoading(false);\n        };\n\n        \n    return {isLoading, apiData, apiError};\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,CAACC,MAAM,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZa,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEFL,YAAY,CAAC,IAAI,CAAC;EAClB,MAAMK,SAAS,GAAG,YAAY;IACtB,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,OAAO,CAAC;MACjCX,MAAM,EAAEA,MAAM;MACdC,GAAG,EAAEA,GAAG;MACRW,IAAI,EAAEV;IACV,CAAC,CAAC,CACDW,IAAI,CAACR,OAAO,IAAIC,UAAU,CAACI,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI,CAAC,CAC1CE,KAAK,CAACP,QAAQ,IAAIC,WAAW,CAACD,QAAQ,CAAC,CAAC,CAAC,CACzCQ,OAAO,CAAC,MAAMX,YAAY,CAAC,KAAK,CAAC,CAAC;IACnC,MAAMQ,IAAI,GAAG,OAAMF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;IACjCN,UAAU,CAACM,IAAI,CAAC;IACpBR,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAGL,OAAO;IAACD,SAAS;IAAEE,OAAO;IAAEE;EAAQ,CAAC;AACzC,CAAC;AAAA,GA1BKR,QAAQ;AA4Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}