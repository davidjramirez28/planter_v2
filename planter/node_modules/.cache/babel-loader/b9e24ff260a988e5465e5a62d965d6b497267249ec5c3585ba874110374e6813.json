{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useFetch = (method, url, body) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiData, setApiData] = useState([]);\n  const [apiError, setApiError] = useState(\"\");\n  _s(useEffect(_s(() => {\n    _s();\n    setIsLoading(true);\n    const fetchData = useCallback(async () => {\n      try {\n        const response = await axios.request({\n          method: method,\n          url: url,\n          data: body\n        });\n        const data = await (response === null || response === void 0 ? void 0 : response.data);\n        setApiData(data);\n      } catch (error) {\n        setApiError(error);\n      }\n      setIsLoading(false);\n    });\n    fetchData();\n  }, \"bc5bDLYGoWbLyKIBWaVLX7TuXjc=\"), []), \"bc5bDLYGoWbLyKIBWaVLX7TuXjc=\");\n  return {\n    isLoading,\n    apiData,\n    apiError\n  };\n};\n_s2(useFetch, \"HsM8oKEOmXAjmZQmFITc3l00w1Q=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","axios","useFetch","method","url","body","isLoading","setIsLoading","apiData","setApiData","apiError","setApiError","fetchData","useCallback","response","request","data","error"],"sources":["/home/pi/Planter_v2/planter_v2/src/utilities/hooks/useFetch.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (method, url, body) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [apiData, setApiData] = useState([]);\n    const [apiError, setApiError] = useState(\"\");\n\n    useEffect(() => {\n        setIsLoading(true);\n        const fetchData = useCallback(async () => {\n            try {\n                const response = await axios.request({\n                    method: method,\n                    url: url,\n                    data: body\n                });\n                const data = await response?.data;\n                setApiData(data);\n            } catch (error) {\n                setApiError(error);\n            }\n            setIsLoading(false);\n        });\n\n        fetchData();\n    }, []);\n\n    return {isLoading, apiData, apiError};\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,CAACC,MAAM,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAAA;EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,GAAAD,SAAS,IAAC,MAAM;IAAA;IACZQ,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMK,SAAS,GAAGC,WAAW,CAAC,YAAY;MACtC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,OAAO,CAAC;UACjCZ,MAAM,EAAEA,MAAM;UACdC,GAAG,EAAEA,GAAG;UACRY,IAAI,EAAEX;QACV,CAAC,CAAC;QACF,MAAMW,IAAI,GAAG,OAAMF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;QACjCP,UAAU,CAACO,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZN,WAAW,CAACM,KAAK,CAAC;MACtB;MACAV,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;IAEFK,SAAS,EAAE;EACf,CAAC,mCAAE,EAAE,CAAC;EAEN,OAAO;IAACN,SAAS;IAAEE,OAAO;IAAEE;EAAQ,CAAC;AACzC,CAAC;AAAA,IA1BKR,QAAQ;AA4Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}